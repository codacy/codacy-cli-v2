name: plugin it-test

permissions:
  contents: write

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git history
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Build CLI for all platforms
        run: make build-all
      - name: Upload CLI binaries
        uses: actions/upload-artifact@v4
        with:
          name: cli-binaries
          path: |
            cli-v2-linux
            cli-v2.exe
            cli-v2-macos

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git history

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Download CLI binaries
        uses: actions/download-artifact@v4
        with:
          name: cli-binaries
          path: .

      - name: Select correct binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            # Keep the .exe extension for Windows
            echo "Using Windows binary with .exe extension"
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            mv cli-v2-macos cli-v2
          else
            mv cli-v2-linux cli-v2
          fi

      - name: Make binary executable
        if: matrix.os != 'windows-latest'
        run: chmod +x cli-v2

      - name: Install yq on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install yq -y
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
          refreshenv

      - name: Run init tests on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          & ./integration-tests/run.ps1
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Integration tests failed with exit code $LASTEXITCODE"
            exit $LASTEXITCODE
          }
        env:
          CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}

      - name: Run init tests on Unix
        if: matrix.os != 'windows-latest'
        id: run_init_tests_unix
        continue-on-error: true
        shell: bash
        env:
          CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}
        run: |
          chmod +x integration-tests/run.sh
          ./integration-tests/run.sh

      - name: Run tool tests
        if: matrix.os != 'windows-latest'
        id: run_tests
        continue-on-error: true
        shell: bash
        run: |
          # Make the script executable
          chmod +x run-tool-tests.sh
          
          # Initialize failed tools file
          rm -f /tmp/failed_tools.txt
          touch /tmp/failed_tools.txt
          
          # Run tests for each tool directory
          for tool_dir in plugins/tools/*/; do
            tool_name=$(basename "$tool_dir")
            if [ -d "$tool_dir/test/src" ]; then
              echo "Running tests for $tool_name..."
              ./run-tool-tests.sh "$tool_name" || {
                echo "❌ Test failed for $tool_name"
                echo "$tool_name" >> /tmp/failed_tools.txt
              }
            fi
          done
          
          # Check if any tools failed
          if [ -s /tmp/failed_tools.txt ] && [ "$(wc -l < /tmp/failed_tools.txt)" -gt 0 ]; then
            echo -e "\n❌ The following tools failed their tests:"
            cat /tmp/failed_tools.txt
            echo "::error::Some tool tests failed. Please check the logs above for details."
            exit 1
          else
            echo "✅ All tool tests passed successfully!"
          fi

      - name: Check test results
        if: failure()
        run: |
          echo "Job failed because some tests failed. Please check the logs above for details."
          exit 1