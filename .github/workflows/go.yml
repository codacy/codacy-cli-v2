on: push

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git history
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Set version info
        id: version
        run: |
          VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "development")
          COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
          BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "COMMIT=${COMMIT}" >> $GITHUB_ENV
          echo "BUILD_TIME=${BUILD_TIME}" >> $GITHUB_ENV
          echo "LDFLAGS=-X 'codacy/cli-v2/version.Version=${VERSION}' -X 'codacy/cli-v2/version.GitCommit=${COMMIT}' -X 'codacy/cli-v2/version.BuildTime=${BUILD_TIME}'" >> $GITHUB_ENV
      - name: Build CLI for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o cli-v2-linux ./cli-v2.go
      - name: Build CLI for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o cli-v2.exe ./cli-v2.go
      - name: Build CLI for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o cli-v2-macos ./cli-v2.go
      - name: Upload CLI binaries
        uses: actions/upload-artifact@v4
        with:
          name: cli-binaries
          path: |
            cli-v2-linux
            cli-v2.exe
            cli-v2-macos

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Install dependencies from .codacy/codacy.yaml
        run: |
          go build ./cli-v2.go
          ./cli-v2 install
      - name: "Run tests"
        run: |
          go test -coverprofile=unit.coverage.out ./...
      - name: "Upload coverage to Codacy"
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report --force-coverage-parser go -r unit.coverage.out

# For now we are not releasing the CLI, as we are making some quicker iterations
  release:
    needs: [test]
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: "Git Version"
        id: generate-version
        uses: codacy/git-version@2.8.0
      - name: "Tag version"
        run: |
          git tag ${{ steps.generate-version.outputs.version }}
          git push --tags "https://codacy:${{ secrets.GITHUB_TOKEN }}@github.com/codacy/codacy-cli-v2"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "latest"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
