on: push

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Build CLI
        run: |
          go build ./cli-v2.go
      - name: Upload CLI binary
        uses: actions/upload-artifact@v3
        with:
          name: cli-binary
          path: cli-v2

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Download CLI binary
        uses: actions/download-artifact@v3
        with:
          name: cli-binary
          path: .
      - name: Make binary executable
        if: matrix.os != 'windows-latest'
        run: chmod +x cli-v2
      - name: Install dependencies from .codacy/codacy.yaml
        run: |
          ./cli-v2 install
      - name: "Run tests"
        run: |
          go test -coverprofile=unit.coverage.out ./...
      - name: "Upload coverage to Codacy"
        if: matrix.os == 'ubuntu-latest'  # Only upload coverage from Ubuntu
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report --force-coverage-parser go -r unit.coverage.out

  release:
    needs: test
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: "Git Version"
        id: generate-version
        uses: codacy/git-version@2.8.0
      - name: "Tag version"
        run: |
          git tag ${{ steps.generate-version.outputs.version }}
          git push --tags "https://codacy:${{ secrets.GITHUB_TOKEN }}@github.com/codacy/codacy-cli-v2"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "latest"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
