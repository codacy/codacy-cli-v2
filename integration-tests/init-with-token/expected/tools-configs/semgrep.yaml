rules:
    - id: apex.lang.security.ncino.endpoints.namedcredentialsconstantmatch.named-credentials-constant-match
      languages:
        - apex
      message: Named Credentials (and callout endpoints) should be used instead of hard-coding credentials. 1. Hard-coded credentials are hard to maintain when mixed in with application code. 2. It is particularly hard to update hard-coded credentials when they are used amongst different classes. 3. Granting a developer access to the codebase means granting knowledge of credentials, and thus keeping a two-level access is not possible. 4. Using different credentials for different environments is troublesome and error-prone.
      metadata:
        category: security
        confidence: HIGH
        cwe:
            - 'CWE-540: Inclusion of Sensitive Information in Source Code'
        impact: HIGH
        likelihood: LOW
        references:
            - https://cwe.mitre.org/data/definitions/540.html
        subcategory:
            - vuln
        technology:
            - salesforce
      min-version: 1.44.0
      mode: taint
      pattern-sinks:
        - patterns:
            - pattern: req.setHeader($X, ...);
            - focus-metavariable: $X
      pattern-sources:
        - pattern: '...String $X = ''Authorization'';'
      severity: ERROR
    - id: clojure.lang.security.use-of-md5.use-of-md5
      languages:
        - clojure
      message: MD5 hash algorithm detected. This is not collision resistant and leads to easily-cracked password hashes. Replace with current recommended hashing algorithms.
      metadata:
        author: Gabriel Marquet <gab.marquet@gmail.com>
        category: security
        confidence: HIGH
        cwe:
            - 'CWE-328: Use of Weak Hash'
        impact: HIGH
        likelihood: MEDIUM
        owasp:
            - A03:2017 - Sensitive Data Exposure
            - A02:2021 - Cryptographic Failures
        references:
            - https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html
            - https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html
        source-rule-url: https://github.com/clj-holmes/clj-holmes-rules/blob/main/security/weak-hash-function-md5.yml
        subcategory:
            - vuln
        technology:
            - clojure
      pattern-either:
        - pattern: (MessageDigest/getInstance "MD5")
        - pattern: (MessageDigest/getInstance MessageDigestAlgorithms/MD5)
        - pattern: (MessageDigest/getInstance org.apache.commons.codec.digest.MessageDigestAlgorithms/MD5)
        - pattern: (java.security.MessageDigest/getInstance "MD5")
        - pattern: (java.security.MessageDigest/getInstance MessageDigestAlgorithms/MD5)
        - pattern: (java.security.MessageDigest/getInstance org.apache.commons.codec.digest.MessageDigestAlgorithms/MD5)
      severity: WARNING
    - id: codacy.generic.plsql.empty-strings
      languages:
        - generic
      message: Empty strings can lead to unexpected behavior and should be handled carefully.
      metadata:
        category: security
        confidence: MEDIUM
        description: Detects empty strings in the code which might cause issues or bugs.
        impact: MEDIUM
      pattern: $VAR VARCHAR2($LENGTH) := '';
      severity: WARNING
