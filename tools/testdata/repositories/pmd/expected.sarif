{
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "PMD",
          "version": "7.12.0",
          "informationUri": "https://docs.pmd-code.org/latest/",
          "rules": [
            {
              "id": "AtLeastOneConstructor",
              "shortDescription": {
                "text": "Each class should declare at least one constructor"
              },
              "fullDescription": {
                "text": "\n\nEach non-static class should declare at least one constructor.\nClasses with solely static members are ignored, refer to [UseUtilityClassRule](pmd_rules_java_design.html#useutilityclass) to detect those.\n\n        "
              },
              "helpUri": "https://docs.pmd-code.org/pmd-doc-7.12.0/pmd_rules_java_codestyle.html#atleastoneconstructor",
              "help": {
                "text": "\n\nEach non-static class should declare at least one constructor.\nClasses with solely static members are ignored, refer to [UseUtilityClassRule](pmd_rules_java_design.html#useutilityclass) to detect those.\n\n        "
              },
              "properties": {
                "ruleset": "Code Style",
                "priority": 3,
                "tags": [
                  "Code Style"
                ]
              }
            },
            {
              "id": "UnusedPrivateField",
              "shortDescription": {
                "text": "Avoid unused private fields such as 'x'."
              },
              "fullDescription": {
                "text": "\nDetects when a private field is declared and/or assigned a value, but not used.\n\nSince PMD 6.50.0 private fields are ignored, if the fields are annotated with any annotation or the\nenclosing class has any annotation. Annotations often enable a framework (such as dependency injection, mocking\nor e.g. Lombok) which use the fields by reflection or other means. This usage can't be detected by static code analysis.\nPreviously these frameworks where explicitly allowed by listing their annotations in the property\n\"ignoredAnnotations\", but that turned out to be prone of false positive for any not explicitly considered framework.\n        "
              },
              "helpUri": "https://docs.pmd-code.org/pmd-doc-7.12.0/pmd_rules_java_bestpractices.html#unusedprivatefield",
              "help": {
                "text": "\nDetects when a private field is declared and/or assigned a value, but not used.\n\nSince PMD 6.50.0 private fields are ignored, if the fields are annotated with any annotation or the\nenclosing class has any annotation. Annotations often enable a framework (such as dependency injection, mocking\nor e.g. Lombok) which use the fields by reflection or other means. This usage can't be detected by static code analysis.\nPreviously these frameworks where explicitly allowed by listing their annotations in the property\n\"ignoredAnnotations\", but that turned out to be prone of false positive for any not explicitly considered framework.\n        "
              },
              "properties": {
                "ruleset": "Best Practices",
                "priority": 3,
                "tags": [
                  "Best Practices"
                ]
              }
            },
            {
              "id": "ShortVariable",
              "shortDescription": {
                "text": "Avoid variables with short names like x"
              },
              "fullDescription": {
                "text": "\nFields, local variables, enum constant names or parameter names that are very short are not helpful to the reader.\n        "
              },
              "helpUri": "https://docs.pmd-code.org/pmd-doc-7.12.0/pmd_rules_java_codestyle.html#shortvariable",
              "help": {
                "text": "\nFields, local variables, enum constant names or parameter names that are very short are not helpful to the reader.\n        "
              },
              "properties": {
                "ruleset": "Code Style",
                "priority": 3,
                "tags": [
                  "Code Style"
                ]
              }
            },
            {
              "id": "CommentRequired",
              "shortDescription": {
                "text": "Field comments are required"
              },
              "fullDescription": {
                "text": "\nDenotes whether javadoc (formal) comments are required (or unwanted) for specific language elements.\n        "
              },
              "helpUri": "https://docs.pmd-code.org/pmd-doc-7.12.0/pmd_rules_java_documentation.html#commentrequired",
              "help": {
                "text": "\nDenotes whether javadoc (formal) comments are required (or unwanted) for specific language elements.\n        "
              },
              "properties": {
                "ruleset": "Documentation",
                "priority": 3,
                "tags": [
                  "Documentation"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "AtLeastOneConstructor",
          "ruleIndex": 0,
          "message": {
            "text": "Each class should declare at least one constructor"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "testdata/repositories/pmd/RulesBreaker.java"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "UnusedPrivateField",
          "ruleIndex": 1,
          "message": {
            "text": "Avoid unused private fields such as 'x'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "testdata/repositories/pmd/RulesBreaker.java"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "ShortVariable",
          "ruleIndex": 2,
          "message": {
            "text": "Avoid variables with short names like x"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "testdata/repositories/pmd/RulesBreaker.java"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "CommentRequired",
          "ruleIndex": 3,
          "message": {
            "text": "Field comments are required"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "testdata/repositories/pmd/RulesBreaker.java"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 18
                }
              }
            }
          ]
        }
      ],
      "invocations": [
        {
          "executionSuccessful": false,
          "toolConfigurationNotifications": [
            {
              "associatedRule": {
                "id": "LoosePackageCoupling"
              },
              "message": {
                "text": "No packages or classes specified"
              }
            }
          ],
          "toolExecutionNotifications": []
        }
      ]
    }
  ]
}
